#!/usr/bin/env tclsh

package require Tclx

# TODO: Check argv length

# TODO: Help text

# TODO: Order of args - which overrides which

##############################################################################
# Helper
##############################################################################

proc addSuffixToPaths {paths suffix} {
    set res {}
    foreach e $paths {
        set fullPath "$e$suffix" 
        if {[file exists $fullPath]} {
            lappend res $fullPath
        }
    }
    return [list {*}$res {*}$paths]
}

proc addCurrentDirToPaths {paths} {
    set res {}
    if {[lsearch $paths "."] == -1 && [lsearch $paths "./"] == -1} {
        return [list . {*}$paths]
    } else {
        return $paths
    }
}

##############################################################################
# Main
##############################################################################

# Mark the end of the list of envs if needed
if {[lsearch $::argv "-"] == -1} {
    set addedPaths [lrange $::argv 0 0]
    set args [lrange $::argv 1 end]
} else {
    set index [lsearch $::argv "-"]
    set addedPaths [lrange $::argv 0 [expr {$index - 1}]]
    set args [lrange $::argv [expr {$index + 1}] end]
}

set dedupedPaths [split [string trim [exec echo $::env(PATH) | awk -v RS=: {!($0 in a) {a[$0]; print}}]] "\n"]
set paths [addCurrentDirToPaths $dedupedPaths]
foreach addedPath $addedPaths {
    set paths [addSuffixToPaths $paths "/$addedPath"]
}
set ::env(PATH) [join $paths ":"]

if {[lindex $args 0] ne ""} {
    execl [lindex $args 0] [lrange $args 1 end]
}
