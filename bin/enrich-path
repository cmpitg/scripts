#!/usr/bin/env tclsh

package require Tclx

# TODO: Check argv length

# TODO: Help text

# TODO: Order of args - which overrides which

# TODO: The newly construct paths are prepended

##############################################################################
# Helper
##############################################################################

proc addSuffixToPaths {paths suffix} {
    if {[string match "/*" $suffix]} {
        return [list $suffix]
    }

    set res {}
    foreach e $paths {
        set newPath "$e/$suffix"
        if {[file exists $newPath]} {
            lappend res $newPath
        }
    }
    return $res
}

##############################################################################
# Main
##############################################################################

# Mark the end of the list of envs if needed
if {[lsearch $::argv "-"] == -1} {
    set addedPaths [lrange $::argv 0 0]
    set args [lrange $::argv 1 end]
} else {
    set index [lsearch $::argv "-"]
    set addedPaths [lrange $::argv 0 [expr {$index - 1}]]
    set args [lrange $::argv [expr {$index + 1}] end]
}

set paths [split [string trim [exec echo ".:$::env(PATH)" | awk -v RS=: {!($0 in a) {a[$0]; print}}]] "\n"]
foreach suffix $addedPaths {
    set pathsWithSuffix [addSuffixToPaths $paths $suffix]
    set paths [list {*}$pathsWithSuffix {*}$paths]
}
set ::env(PATH) [join $paths ":"]

if {[lindex $args 0] ne ""} {
    execl [lindex $args 0] [lrange $args 1 end]
}
