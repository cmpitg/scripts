#!/usr/bin/env tclsh

package require Tcl 8
package require cmdline

if {[catch {exec report-missing-executables find "GNU Find" sort Coreutils parallel "GNU Parallel" with-workdir cmpitg-scripts <@ stdin >@ stdout 2>@ stderr}]} {
    exit 1
}

proc usage {{fd stdout}} {
    puts $fd {get-all-execs [<max-depth>]

Get all executables from the PATH environment variables, sort in ascending order, deduplicate, and return them one line per entry.  max-depth defines how deep we traverse from a path.  If not specified, max-depth is 1.}
}

proc getAccessiblePaths {maxDepth} {
    set rawPaths [split [string trim [exec dedup-PATH]] ":"]
    set paths {}
    foreach path $rawPaths {
        if {$path ne "." && $path ne "./" && [file exists $path] && [file isdirectory $path]} {
            # lappend cmds [list with-workdir "$path/" find . -maxdepth $maxDepth -type f,l -executable | cut -c 3-]
            lappend paths "$path/"
        }
    }
    return $paths
}

if {$::argv == "--help"} {
    usage
}
if {$::argc > 2} {
    usage stderr
    exit 1
}

if {$::argv eq {}} {
    set maxDepth 1
} else {
    set maxDepth [lindex $::argv 0]
}

set paths [getAccessiblePaths $maxDepth]

# With GNU Parallel - Slowest
# catch { puts [exec parallel --link with-workdir ::: {*}$paths ::: fdfind ::: . ::: --maxdepth ::: $maxDepth ::: --type ::: x ::: --type ::: l ::: --hidden ::: --no-ignore ::: --color ::: never | rev | cut -d/ -f 1 | rev | sort -u | rg -v {^$}]}

# Without GNU Parallel
# basename -> Slow
# catch { puts [exec fdfind . --maxdepth $maxDepth --type x --type l --hidden --no-ignore {*}$paths --color never --exec basename | sort -u | rg -v {^$}]}
# cut + rev: fast
catch { puts [exec fdfind . --maxdepth $maxDepth --type x --type l --hidden --no-ignore {*}$paths --color never | rev | cut -d/ -f 1 | rev | sort -u | rg -v {^$}]}
# Awk: fast but a bit slower
# catch { puts [exec fdfind . --maxdepth $maxDepth --type x --type l --hidden --no-ignore {*}$paths --color never | awk --field-separator=/ {{ print $NF }} | sort -u | rg -v {^$}]}
