#!/usr/bin/env python3
# -*- mode: python -*-

#
# Copyright (C) 2013  Duong H. Nguyen (cmpitg_at_gmail_dot_com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import os
import sys
import re
import glob


URT_DEMO_DIR = "~/.q3a/q3ut4/demos/"
URT_EXT = ".dm_68"


def change_dir(directory):
    """Change dir if necessary."""
    os.chdir(directory)


def take_components(name):
    """
    Take all compornents from a filename of format
    xxxx_x_x_x_x_x_xxxxx_xx_xxx_TS.dm68 and return a dictionary.
    """
    r = r'^([0-9]*)_([0-9]*)_([0-9]*)_([0-9]*)_([0-9]*)_([0-9]*)_(.*)_ut4_(.*)_(TS|TDM|CTF).{0,6}.dm_68$'
    matches = re.match(r, name, re.IGNORECASE)
    if matches:
        return {
            'year': matches.group(1),
            'month': matches.group(2).zfill(2),
            'date': matches.group(3).zfill(2),
            'hour': matches.group(4).zfill(2),
            'minute': matches.group(5).zfill(2),
            'second': matches.group(6).zfill(2),
            'playername': matches.group(7),
            'mapname': matches.group(8),
        }
    else:
        return None


def upcase_names_lowcase_exts(ext=URT_EXT):
    """Rename all files to upper-case."""
    print('>> \033[92mUpcase names, lowcase extensions\033[0m')

    count = 0
    for filename in glob.glob("*"):
        if filename.lower().endswith(ext):
            new_name = os.path.splitext(filename)[0].upper() + ext
            if not filename == new_name:
                os.rename(filename, new_name)
                count += 1
    print('  ', count, 'file(s) renamed')


def reformat_filenames(ext=URT_EXT):
    """
    Change date and time format
       from: 2013_9_9_0_3_0_playername_ut4_mapname_ts.dm_68
       to: 2013-09-09_00-03-00_UTC7_-_playername_-_mapname.dm_68
    """

    print('>> \033[92mReformat filenames\033[0m')
    count = 0

    for filename in glob.glob("*" + ext):
        # Only take unformatted file
        if not re.match(r'^[0-9]{4}_', filename):
            continue

        comps = take_components(filename)
        if not comps:
            continue

        old_name = filename
        new_name = "{1}-{2}-{3}_{4}-{5}-{6}_UTC7_-_{7}_-_{8}.dm_68".format(filename,
                comps['year'],
                comps['month'],
                comps['date'],
                comps['hour'],
                comps['minute'],
                comps['second'],
                comps['playername'],
                comps['mapname'])

        print('    Rename to \033[93m{0}\033[0m'.format(new_name))
        os.rename(old_name, new_name)

    print('  ', count, 'file(s) renamed')


if __name__ == "__main__":
    change_dir(os.path.expanduser(URT_DEMO_DIR))
    upcase_names_lowcase_exts()
    reformat_filenames()
